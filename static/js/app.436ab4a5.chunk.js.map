{"version":3,"sources":["app/Heading.js","app/Input.js","app/Button.js","app/TodoButton.js","app/Todo.js","app/TodoList.js","app/TabBarItem.js","app/TabBar.js","App.js"],"names":["styles","StyleSheet","create","header","marginTop","headerText","textAlign","fontSize","color","fontWeight","Heading","View","style","Text","inputContainer","marginLeft","marginRight","shadowOpacity","shadowRadius","shadowColor","shadowOffset","width","height","input","backgroundColor","paddingLeft","paddingRight","Input","inputValue","inputChange","TextInput","value","placeholder","placeholderTextColor","selectionColor","onChangeText","buttonContainer","alignItems","button","borderWidth","borderColor","justifyContent","submit","Button","submitTodo","TouchableHighlight","underlayColor","onPress","padding","borderRadius","alignSelf","text","complete","deleteButton","TodoButton","name","todoContainer","borderTopWidth","borderRightWidth","borderLeftWidth","paddingTop","paddingBottom","flexDirection","todoText","buttons","flex","Todo","todo","toggleComplete","deleteTodo","title","todoIndex","TodoList","todos","type","filter","t","getVisibleTodos","map","i","key","item","border","borderLeftColor","selected","bold","TabBarItem","setType","itemText","container","borderTopColor","TabBar","App","state","bind","this","setState","forEach","console","log","match","ScrollView","keyboardShouldPersistTaps","content","Component"],"mappings":"6PAWMA,EAASC,IAAWC,OAAO,CAC7BC,OAAO,CACHC,UAAW,IAEfC,WAAW,CACPC,UAAW,SACXC,SAAU,GACVC,MAAO,wBACPC,WAAY,SAILC,EApBC,kBACZ,kBAACC,EAAA,EAAD,CAAMC,MAAOZ,EAAOG,QAChB,kBAACU,EAAA,EAAD,CAAMD,MAAOZ,EAAOK,YAApB,W,QCUFL,EAASC,IAAWC,OAAO,CAC7BY,eAAe,CACXC,WAAW,GACXC,YAAY,GACZC,cAAc,GACdC,aAAa,EACbC,YAAa,UACbC,aAAc,CAACC,MAAM,EAAGC,OAAO,IAEnCC,MAAM,CACFD,OAAO,GACPE,gBAAgB,UAChBC,YAAa,GACbC,aAAc,MAIPC,EA7BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,YAAf,OACT,kBAAClB,EAAA,EAAD,CAAMC,MAAOZ,EAAOc,gBAChB,kBAACgB,EAAA,EAAD,CACAC,MAAOH,EACPhB,MAAOZ,EAAOuB,MACdS,YAAY,+BACZC,qBAAqB,UACrBC,eAAe,UACfC,aAAcN,M,QCKhB7B,EAASC,IAAWC,OAAO,CAC7BkC,gBAAiB,CACbC,WAAY,YAEhBC,OAAQ,CACJhB,OAAQ,GACRG,YAAa,GACbC,aAAc,GACdF,gBAAgB,UAChBH,MAAO,IACPL,YAAa,GACbZ,UAAW,GACXmC,YAAa,EACbC,YAAa,kBACbC,eAAgB,SAChBJ,WAAW,UAEfK,OAAO,CACHlC,MAAO,UACPC,WAAY,SAILkC,EApCA,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAF,OACX,kBAACjC,EAAA,EAAD,CAAMC,MAASZ,EAAOoC,iBAClB,kBAACS,EAAA,EAAD,CACIC,cAAc,UACdlC,MAAQZ,EAAOsC,OACfS,QAASH,GACL,kBAAC/B,EAAA,EAAD,CAAMD,MAAOZ,EAAO0C,QAApB,aCSV1C,EAASC,IAAWC,OAAO,CAC7BoC,OAAQ,CACJU,QAAQ,EACRhC,YAAa,EACbiC,aAAa,EACbV,YAAa,EACbC,YAAa,UACbU,UAAU,YAEdC,KAAK,CACD3C,MAAO,WAGX4C,SAAU,CACN5C,MAAM,QACNC,WAAY,QAEhB4C,aAAc,CACV7C,MAAO,0BAIA8C,EArCI,SAAC,GAAD,IAAGP,EAAH,EAAGA,QAASK,EAAZ,EAAYA,SAAUG,EAAtB,EAAsBA,KAAtB,OACf,kBAACV,EAAA,EAAD,CACIC,cAAc,UACVlC,MAAQZ,EAAOsC,OACnBS,QAASA,GACL,kBAAClC,EAAA,EAAD,CAAMD,MAAO,CACTZ,EAAOmD,KACPC,EAAWpD,EAAOoD,SAAW,KACpB,WAATG,EAAoBvD,EAAOqD,aAAa,OAEnCE,KCQfvD,EAASC,IAAWC,OAAO,CAC7BsD,cAAe,CACXxC,YAAa,GACbD,WAAY,GACZS,gBAAgB,UAChBiC,eAAe,EACfC,iBAAiB,EACjBC,gBAAgB,EAChBnB,YAAa,UACbf,YAAa,GACbmC,WAAY,EACZC,cAAe,EACf5C,cAAe,GACfC,aAAc,EACdC,YAAa,UACbC,aAAc,CAACC,MAAM,EAAGC,OAAO,GAC/BwC,cAAe,MACfzB,WAAY,UAEhB0B,SAAS,CACLxD,SAAS,IAEbyD,QAAS,CACLC,KAAM,EACNH,cAAe,MACfrB,eAAgB,WAChBJ,WAAY,YAIL6B,EA/CF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,WAAxB,OACT,kBAAC1D,EAAA,EAAD,CAAMC,MAAOZ,EAAOwD,eAChB,kBAAC3C,EAAA,EAAD,CAAMD,MAAOZ,EAAO+D,UACfI,EAAKG,OAEV,kBAAC3D,EAAA,EAAD,CAAMC,MAAOZ,EAAOgE,SAChB,kBAAC,EAAD,CACIT,KAAK,OACLH,SAAUe,EAAKf,SACfL,QAAS,kBAAMqB,EAAeD,EAAKI,cACvC,kBAAC,EAAD,CACIhB,KAAK,SACLR,QAAS,kBAAMsB,EAAWF,EAAKI,iBCiBhCC,EA7BE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOJ,EAAsC,EAAtCA,WAAYD,EAA0B,EAA1BA,eAsBnC,OAVAK,GADAA,EAVwB,SAACA,EAAOC,GAC5B,OAAOA,GACH,IAAK,MACD,OAAOD,EACX,IAAK,WACD,OAAOA,EAAME,QAAO,SAACC,GAAD,OAAMA,EAAExB,YAChC,IAAK,SACD,OAAOqB,EAAME,QAAO,SAACC,GAAD,OAAQA,EAAExB,aAGlCyB,CAAgBJ,EAXqC,EAAVC,OAYtCI,KAAI,SAACX,EAAKY,GACnB,OACI,kBAAC,EAAD,CACIV,WAAYA,EACZD,eAAgBA,EAChBY,IAAKD,EACLZ,KAAMA,OAKd,kBAACxD,EAAA,EAAD,KACK8D,ICRPzE,EAASC,IAAWC,OAAO,CAC7B+E,KAAM,CACFhB,KAAK,EACLxB,eAAgB,SAChBJ,WAAa,UAEjB6C,OAAQ,CACJvB,gBAAgB,EAChBwB,gBAAiB,WAErBC,SAAU,CACN5D,gBAAgB,WAEpB6D,KAAO,CACH5E,WAAY,UAKL6E,EAnCI,SAAC,GAAD,IAAEJ,EAAF,EAAEA,OAAQZ,EAAV,EAAUA,MAAOc,EAAjB,EAAiBA,SAAUG,EAA3B,EAA2BA,QAASb,EAApC,EAAoCA,KAApC,OACf,kBAAC7B,EAAA,EAAD,CACIC,cAAc,UACdC,QAASwC,EACT3E,MAAO,CACHZ,EAAOiF,KAAMG,EAAWpF,EAAOoF,SAAW,KAC1CF,EAASlF,EAAOkF,OAAQ,KACxBR,IAASJ,EAAQtE,EAAOoF,SAAU,OAEtC,kBAACvE,EAAA,EAAD,CAAMD,MAAO,CAACZ,EAAOwF,SAAUd,IAAQJ,EAAQtE,EAAOqF,KAAM,OACvDf,KCEPtE,EAASC,IAAWC,OAAO,CAC7BuF,UAAW,CACPnE,OAAQ,GACRwC,cAAe,MACfL,eAAgB,EAChBiC,eAAgB,aAITC,EApBA,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASb,EAAZ,EAAYA,KAAZ,OACX,kBAAC/D,EAAA,EAAD,CAAMC,MAAOZ,EAAOyF,WAChB,kBAAC,EAAD,CAAYf,KAAOA,EAAMJ,MAAM,MAC/BiB,QAAS,kBAAMA,EAAQ,UACvB,kBAAC,EAAD,CAAYb,KAAOA,EAAMQ,QAAM,EAACZ,MAAM,SACtCiB,QAAS,kBAAKA,EAAQ,aACtB,kBAAC,EAAD,CAAYb,KAAQA,EAAMQ,QAAM,EAACZ,MAAO,WACxCiB,QAAS,kBAAKA,EAAQ,iB,+aCJ9B,IAAIhB,EAAY,EACVqB,E,gCACF,aAAc,IAAD,sBACT,gBACKC,MAAM,CACPjE,WAAW,GACX6C,MAAO,GACPC,KAAK,OAET,EAAKN,eAAiB,EAAKA,eAAe0B,KAApB,QACtB,EAAKzB,WAAa,EAAKA,WAAWyB,KAAhB,QAClB,EAAKlD,WAAa,EAAKA,WAAWkD,KAAhB,QAClB,EAAKP,QAAU,EAAKA,QAAQO,KAAb,QAVN,E,mCAYb,SAASpB,GACLqB,KAAKC,SAAS,CAACtB,W,wBAEnB,SAAYH,GACR,IAAKE,EAASsB,KAAKF,MAAdpB,MACLA,EAAQA,EAAME,QAAO,SAACR,GAAD,OAAUA,EAAKI,YAAaA,KACjDwB,KAAKC,SAAS,CAACvB,Y,4BAEnB,SAAeF,GACX,IAAIE,EAAQsB,KAAKF,MAAMpB,MACvBA,EAAMwB,SAAQ,SAAC9B,GACRA,EAAKI,YAAcA,IAClBJ,EAAKf,UAAYe,EAAKf,aAG9B2C,KAAKC,SAAS,CAACvB,Y,yBAEnB,SAAY7C,GACRsE,QAAQC,IAAI,eAAiBvE,GAC7BmE,KAAKC,SAAS,CAACpE,iB,wBAEnB,WAAe,IAAD,OACV,IAAGmE,KAAKF,MAAMjE,WAAWwE,MAAM,SAA/B,CAGA,IAAMjC,EAAO,CACTG,MAAOyB,KAAKF,MAAMjE,WAClB2C,YACAnB,UAAU,GAEdmB,IACA,IAAME,EAAK,cAAOsB,KAAKF,MAAMpB,OAAlB,CAAyBN,IACpC4B,KAAKC,SAAS,CAACvB,QAAO7C,WAAY,KAAK,WACnCsE,QAAQC,IAAI,UAAW,EAAKN,a,oBAGpC,WAAS,IAAD,OACJ,EAAmCE,KAAKF,MAAhCjE,EAAR,EAAQA,WAAY6C,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAC3B,OACI,kBAAC/D,EAAA,EAAD,CAAMC,MAAOZ,EAAOyF,WAChB,kBAACY,EAAA,EAAD,CACIC,0BAA0B,SAC1B1F,MAAOZ,EAAOuG,SAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACI3E,WAAYA,EACZC,YAAc,SAACsB,GAAD,OAAU,EAAKtB,YAAYsB,MACzC,kBAAC,EAAD,CACIuB,KAAMA,EACNN,eAAgB2B,KAAK3B,eACrBC,WAAY0B,KAAK1B,WACjBI,MAAOA,IACX,kBAAC,EAAD,CAAQ7B,WAAYmD,KAAKnD,cAE7B,kBAAC,EAAD,CAAQ8B,KAAMA,EAAMa,QAASQ,KAAKR,e,GAnEhCiB,aA0EZxG,EAASC,IAAWC,OAAO,CAC7BuF,UAAU,CACNxB,KAAK,EACLzC,gBAAgB,WAEpB+E,QAAQ,CACJtC,KAAK,EACLL,WAAW,MAGJgC,O","file":"static/js/app.436ab4a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nconst Heading = () =>(\r\n    <View style={styles.header}>\r\n        <Text style={styles.headerText}>\r\n            Todos\r\n        </Text>\r\n    </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    header:{\r\n        marginTop: 80\r\n    },\r\n    headerText:{\r\n        textAlign: 'center',\r\n        fontSize: 72,\r\n        color :'rgba(175,47,47, 0.25)',\r\n        fontWeight: '100'\r\n    }\r\n})\r\n\r\nexport default Heading;","import React from 'react';\r\nimport { TextInput, StyleSheet, View } from 'react-native';\r\n\r\nconst Input =( {inputValue, inputChange}) =>(\r\n    <View style={styles.inputContainer}>\r\n        <TextInput \r\n        value={inputValue}\r\n        style={styles.input}\r\n        placeholder=\"What needs to be done today?\"\r\n        placeholderTextColor='#CACACA'\r\n        selectionColor=\"#666666\"\r\n        onChangeText={inputChange} />\r\n    </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer:{\r\n        marginLeft:20,\r\n        marginRight:20,\r\n        shadowOpacity:0.2,\r\n        shadowRadius:3,\r\n        shadowColor: '#000000',\r\n        shadowOffset: {width:2, height:2}\r\n    },\r\n    input:{\r\n        height:60,\r\n        backgroundColor:'#ffffff',\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    }\r\n})\r\n\r\nexport default Input","import React from 'react';\r\nimport { TouchableHighlight, Text, StyleSheet, View } from 'react-native';\r\n\r\nconst Button = ({submitTodo}) =>(\r\n    <View style = {styles.buttonContainer}>\r\n        <TouchableHighlight\r\n            underlayColor=\"#efefef\"\r\n            style= {styles.button}\r\n            onPress={submitTodo}>\r\n                <Text style={styles.submit}>\r\n                    Submit\r\n                </Text>\r\n            </TouchableHighlight>\r\n    </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    buttonContainer: {\r\n        alignItems: 'flex-end'\r\n    },\r\n    button: {\r\n        height: 50,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor:'#ffffff',\r\n        width: 200,\r\n        marginRight: 20,\r\n        marginTop: 15,\r\n        borderWidth: 1,\r\n        borderColor: 'rgba(0,0,0, .1)',\r\n        justifyContent: 'center',\r\n        alignItems:'center'\r\n    },\r\n    submit:{\r\n        color: '#666666',\r\n        fontWeight: '600'\r\n    }\r\n})\r\n\r\nexport default Button","import React from 'react';\r\nimport { TouchableHighlight, Text, StyleSheet} from 'react-native';\r\n\r\nconst TodoButton = ({ onPress, complete, name}) => (\r\n    <TouchableHighlight\r\n        underlayColor=\"#efefef\"\r\n            style= {styles.button}\r\n        onPress={onPress}>\r\n            <Text style={[\r\n                styles.text,\r\n                complete ? styles.complete : null,\r\n                name === 'Delete' ? styles.deleteButton:null]}>\r\n            \r\n                    {name}\r\n                </Text>\r\n        </TouchableHighlight>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        padding:7,\r\n        marginRight: 5,\r\n        borderRadius:4,\r\n        borderWidth: 1,\r\n        borderColor: '#ededed',\r\n        alignSelf:'flex-end'\r\n    },\r\n    text:{\r\n        color: '#666666'\r\n       \r\n    },\r\n    complete: {\r\n        color:\"green\",\r\n        fontWeight: 'bold'\r\n    },\r\n    deleteButton: {\r\n        color: 'rgba(175, 47, 47, 1)'\r\n    }\r\n})\r\n\r\nexport default TodoButton","import React from 'react';\r\nimport {Text, StyleSheet, View } from 'react-native';\r\nimport TodoButton from './TodoButton';\r\n\r\nconst Todo = ({todo, toggleComplete, deleteTodo}) => (\r\n    <View style={styles.todoContainer}>\r\n        <Text style={styles.todoText}>\r\n            {todo.title}\r\n        </Text>\r\n        <View style={styles.buttons}>\r\n            <TodoButton\r\n                name=\"Done\"\r\n                complete={todo.complete}\r\n                onPress={() => toggleComplete(todo.todoIndex)} />\r\n            <TodoButton\r\n                name=\"Delete\"\r\n                onPress={() => deleteTodo(todo.todoIndex)} />\r\n        </View>\r\n    </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    todoContainer: {\r\n        marginRight: 20,\r\n        marginLeft: 20,\r\n        backgroundColor:'#ffffff',\r\n        borderTopWidth:1,\r\n        borderRightWidth:1,\r\n        borderLeftWidth:1,\r\n        borderColor: '#ededed',\r\n        paddingLeft: 14,\r\n        paddingTop: 7,\r\n        paddingBottom: 7,\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 3,\r\n        shadowColor: '#000000',\r\n        shadowOffset: {width:2, height:2},\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    todoText:{\r\n        fontSize:17\r\n    },\r\n    buttons: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center'\r\n    }\r\n})\r\n\r\nexport default Todo","import React from 'react';\r\nimport {View} from 'react-native';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, deleteTodo, toggleComplete, type}) => {\r\n    const getVisibleTodos = (todos, type) =>{\r\n        switch(type){\r\n            case \"All\":\r\n                return todos\r\n            case \"Complete\":\r\n                return todos.filter((t)=> t.complete)\r\n            case \"Active\":\r\n                return todos.filter((t) => !t.complete)\r\n        }\r\n    }\r\n    todos = getVisibleTodos(todos,type)\r\n    todos= todos.map((todo,i) =>{\r\n        return(\r\n            <Todo\r\n                deleteTodo={deleteTodo}\r\n                toggleComplete={toggleComplete}\r\n                key={i}\r\n                todo={todo} />\r\n\r\n        )\r\n    })\r\n    return (\r\n        <View>\r\n            {todos}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\r\nimport { Text, TouchableHighlight, StyleSheet } from 'react-native';\r\n\r\n\r\nconst TabBarItem = ({border, title, selected, setType, type}) => (\r\n    <TouchableHighlight\r\n        underlayColor=\"#efefef\"\r\n        onPress={setType}\r\n        style={[\r\n            styles.item, selected ? styles.selected : null,\r\n            border ? styles.border: null,\r\n            type === title ? styles.selected :null\r\n        ]}>\r\n        <Text style={[styles.itemText, type ===title ? styles.bold: null]}>\r\n            {title}\r\n        </Text>\r\n        </TouchableHighlight>\r\n)\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        flex:1,\r\n        justifyContent: 'center',\r\n        alignItems : 'center'\r\n    },\r\n    border: {\r\n        borderLeftWidth:1,\r\n        borderLeftColor: \"#dddddd\"\r\n    },\r\n    selected: {\r\n        backgroundColor:'#ffffff'\r\n    },\r\n    bold : {\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n})\r\n\r\nexport default TabBarItem","import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport TabBarItem from './TabBarItem.js';\r\n\r\n\r\nconst TabBar = ({ setType, type}) => (\r\n    <View style={styles.container}>\r\n        <TabBarItem type= {type} title=\"All\"\r\n        setType={() => setType(\"All\")} />\r\n        <TabBarItem type= {type} border title=\"Active\"\r\n        setType={() =>setType(\"Active\")} />\r\n        <TabBarItem type = {type} border title =\"Complete\"\r\n        setType={() =>setType(\"Complete\")} />\r\n    </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: 70,\r\n        flexDirection: 'row',\r\n        borderTopWidth: 1,\r\n        borderTopColor: '#dddddd'\r\n    }\r\n})\r\n\r\nexport default TabBar","import React, { Component } from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport Heading from './app/Heading';\nimport Input from './app/Input';\nimport Button from './app/Button';\nimport TodoList from './app/TodoList'\nimport TabBar from './app/TabBar';\n\nlet todoIndex = 0\nclass App extends Component {\n    constructor(){\n        super()\n        this.state={\n            inputValue:'',\n            todos: [],\n            type:'All'\n        }\n        this.toggleComplete = this.toggleComplete.bind(this)\n        this.deleteTodo = this.deleteTodo.bind(this)\n        this.submitTodo = this.submitTodo.bind(this)\n        this.setType = this.setType.bind(this)\n    }\n    setType (type) {\n        this.setState({type})\n    }\n    deleteTodo (todoIndex){\n        let {todos} = this.state\n        todos = todos.filter((todo) => todo.todoIndex !==todoIndex)\n        this.setState({todos})\n    }\n    toggleComplete(todoIndex){\n        let todos = this.state.todos\n        todos.forEach((todo) =>{\n            if(todo.todoIndex === todoIndex) {\n                todo.complete = !todo.complete\n            }\n        })\n        this.setState({todos})\n    }\n    inputChange(inputValue){\n        console.log('Input Value:' , inputValue)\n        this.setState({inputValue})\n    }\n    submitTodo () {\n        if(this.state.inputValue.match(/^\\s*$/)) {\n            return\n        }\n        const todo = {\n            title: this.state.inputValue,\n            todoIndex,\n            complete: false\n        }\n        todoIndex++\n        const todos = [...this.state.todos, todo]\n        this.setState({todos, inputValue: ''}, () => {\n            console.log('State: ', this.state)\n        })\n    }\n    render(){\n        const { inputValue, todos, type} = this.state\n        return(\n            <View style={styles.container}>\n                <ScrollView \n                    keyboardShouldPersistTaps='always'\n                    style={styles.content}>\n                <Heading />\n                <Input\n                    inputValue={inputValue}\n                    inputChange={ (text) => this.inputChange(text)} />\n                    <TodoList\n                        type={type}\n                        toggleComplete={this.toggleComplete}\n                        deleteTodo={this.deleteTodo}\n                        todos={todos}/>\n                    <Button submitTodo={this.submitTodo}/>\n                </ScrollView>\n                <TabBar type={type} setType={this.setType} />\n            </View>\n        )\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n        backgroundColor:'#f5f5f5'\n    },\n    content:{\n        flex:1,\n        paddingTop:60\n    }\n})\nexport default App;"],"sourceRoot":""}